@model IEnumerable<Bemay.Models.Book>

@{
    ViewData["Title"] = "Index";
}

<h1>Books</h1>

@if (User.IsInRole("Admin"))
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>  
}
<form asp-controller="Books" asp-action="Index" method="get" class="form-inline mb-3">
    <div class="row">
        <div class="col-sm-10">
            <input type="text" name="searchString" placeholder="Search..." class="form-control mr-2" />
        </div>
        <div class="col-sm-2">
            <button type="submit" class="btn btn-primary">Search</button>
        </div>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                Author
            </th>
            <th>
                Categories
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Image)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EditionYear)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Language)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PageCount)
            </th>
            @if (User.IsInRole("Admin"))
            {
               <th>
                    @Html.DisplayNameFor(model => model.CreatedAt)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.UpdatedAt)
                </th> 
            }
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AuthorFullName)
            </td>
            <td>
                @if (item.BookCategories != null && item.BookCategories.Any())
                {
                        @foreach (var category in item.BookCategories)
                        {
                            <span>@category.Category?.CategoryName</span>
                            if (!category.Equals(item.BookCategories.Last()))
                            {
                                <span>, </span>
                            }
                        }
                }
                </td>
            <td>
                @if (item.Image != null)
                {
                    <img src="data:image/png;base64,@Convert.ToBase64String(item.Image)" alt="Book Image" style="max-width: 100px; max-height: 100px;" />
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EditionYear)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Language)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PageCount)
            </td>
                @if (User.IsInRole("Admin"))
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.CreatedAt)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UpdatedAt)
                    </td>
                }
                
            <td>
                    @if (User.IsInRole("Admin"))
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> 
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    }  
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> 
            </td>
        </tr>
}
    </tbody>
</table>
